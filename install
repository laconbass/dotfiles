#!/usr/bin/env bash

# http://julipedia.meroh.net/2010/01/set-e-and-set-x.html
set -e


# Personal output functions

#COLS=$(( $(tput cols) - 4 ))
info () {
  printf "\033[00;34m${1}\033[0m\n"
}
warn () {
  printf "\033[0;33m${1}\033[0m\n"
}
doing () {
  printf "\033[00;34m*\033[0m ${1}...\n"
}
success () {
  #printf "\033[1C\033[${COLS}C\t\t\033[0;32mOK${1}\033[0m\n"
  printf "| - - - - - - - - - - - - - - - - -> \033[0;32mOK\033[0m\n"
  #printf "\t\t\t\t     \033[0;32mOK\n${1}\033[0m\n"
}
fail () {
  printf "| - - - - - - - - - - - - - - - -> \033[0;31mFAIL\033[0m\n" && exit 1
  # printf "\t\t\t\t   \033[0;31mFAIL\n${1}\033[0m\n" && exit 1
}

# checks whatever a system util is present
ensure_present () {
  doing "Ensuring package '$1' is present"\
  && dpkg -s $1 > /dev/null 2>&1 && success\
  || (\
    warn "package '$1' not present."\
    && doing "Installing with apt-get"\
    && sudo apt-get install $1\
    || fail "Instalation of '$1' failed :S"\
  )
}


info ""
info "*** *** *** *** *** *** *** *** *** ***"
info "***************************************"
info "* @laconbass' dotfiles install script *"
info "***************************************"
info "*** *** *** *** *** *** *** *** *** ***"
info ""
info "***************************************"
info "***           preparation           ***"
info "**                                   **"

CURRENT=$(pwd)
DOTFILES=$(pwd)/$(dirname $0)
cd $DOTFILES
DOTFILES=$(pwd)

doing "updating repository and git modules"\
 && git pull\
 && git submodule init\
 && git submodule update\
 && success\
 || fail ":S"

info "***************************************"
info "***           xterm utils           ***"
info "**                                   **"

doing "setting .bashrc file"\
 && ln -s "$DOTFILES/term/.bashrc"\
          ~/.bashrc\
 && success\
 || fail "sorry, aborting"

doing "setting git-prompt file"\
 && ln -s "$DOTFILES/term/git-prompt"\
          ~/git-prompt\
 && success\
 || fail

ensure_present "bash-completion"

# this seems not necessary as it will not afect the parent shell...
#doing "loading .bashrc confs"\
# && source ~/.bashrc\
# && success\
# || fail

doing "setting soralized palette for ls output"\
 && eval `dircolors "$DOTFILES/term/1-dircolors-solarized/dircolors.ansi-dark"`\
 && success\
 || fail "something went wrong"

doing "installing gnome-terminal-colors-solarized"\
 && cd $DOTFILES/term/2-gnome-terminal-solarized\
 && ./set_dark.sh\
 && cd $DOTFILES\
 && success\
 || fail


info "***************************************"
info "***        vim-related utils        ***"
info "**                                   **"

ensure_present "vim-nox"

doing "setting .vimrc file"\
 && ln -s "$DOTFILES/vim/.vimrc"\
          ~/.vimrc\
 && success\
 || fail "sorry, aborting"

doing "deleting ~/.vim directory"\
 && rm -r ~/.vim\
 && success\
 || fail

doing "installing pathogen"\
 && mkdir -p ~/.vim/autoload\
 && ln -s "$DOTFILES/vim/1-pathogen/autoload/pathogen.vim"\
          ~/.vim/autoload/pathogen.vim\
 && mkdir -p ~/.vim/bundle\
 && success\
 || fail ":S"

doing "installing Node.vim"\
 && ln -s "$DOTFILES/vim/2-vim-node"\
          ~/.vim/bundle/node\
 && success\
 || fail ":S"

doing "installing solarized"\
 && ln -s "$DOTFILES/vim/3-solarized"\
          ~/.vim/bundle/solarized\
 && success\
 || fail ":S"


doing "installing nodejs-complete"\
 && ln -s "$DOTFILES/vim/4-nodejs-complete"\
          ~/.vim/nodejs-complete\
 && success\
 || fail ":S"

 #&& sudo npm install -g jshint\
 #&& cp "$DOTFILES/vim/5-jshint/plugin/jshint.vim"\
 #         ~/.vim/bundle/jshint.vim\
doing "installing jshint.vim"\
 && warn "this actually does not work"\
 && success\
 || fail ":S"

 #&& ln -s "$DOTFILES/vim/5-jslint/ftplugin"\
 #         ~/.vim/ftplugin\
doing "installing jslint.vim"\
 && warn "this actually does not work"\
 && success\
 || fail ":S"


info "***************************************"
info "***            finish up            ***"
info "**                                   **"

cd $CURRENT

info "The installation process completed"
info "You may want to close this shell and open a new one"
info "Or manually execute:"
info "    source ~/.bashrc"
info ""
info "Press any key..."
read -n 1
